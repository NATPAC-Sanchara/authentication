// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id           String    @id @default(cuid())
  email        String    @unique
  username     String    @unique
  password     String
  otp          String?
  otpExpiresAt DateTime?
  isVerified   Boolean   @default(false)
  createdAt    DateTime  @default(now())
  updatedAt    DateTime  @updatedAt

  @@map("users")
}

model Admin {
  id        String     @id @default(cuid())
  email     String     @unique
  password  String
  isVerified Boolean   @default(true)
  role      AdminRole  @default(ADMIN)
  createdAt DateTime   @default(now())
  updatedAt DateTime   @updatedAt

  @@map("admins")
}

enum AdminRole {
  ADMIN
  SUPER_ADMIN
}

model Trip {
  id          String     @id @default(cuid())
  userId      String
  user        User       @relation(fields: [userId], references: [id])
  deviceId    String?
  startedAt   DateTime   @default(now())
  endedAt     DateTime?
  startLat    Float?
  startLng    Float?
  endLat      Float?
  endLng      Float?
  modes       String[]
  companions  Json?
  destLat     Float?
  destLng     Float?
  destAddressEncrypted String?
  metadata    Json?
  distanceMeters  Int?
  durationSeconds Int?
  distanceByMode  Json?
  createdAt   DateTime   @default(now())
  updatedAt   DateTime   @updatedAt
  points      TripPoint[]
  events      TripEvent[]

  @@map("trips")
  @@index([userId])
}

model TripPoint {
  id        String   @id @default(cuid())
  tripId    String
  trip      Trip     @relation(fields: [tripId], references: [id])
  timestamp DateTime @default(now())
  lat       Float
  lng       Float
  speed     Float?
  accuracy  Float?
  heading   Float?
  mode      String?
  clientId  String?
  createdAt DateTime @default(now())

  @@map("trip_points")
  @@index([tripId])
  @@unique([tripId, clientId])
}

model TripEvent {
  id        String   @id @default(cuid())
  tripId    String
  trip      Trip     @relation(fields: [tripId], references: [id])
  type      String
  data      Json?
  createdAt DateTime @default(now())

  @@map("trip_events")
  @@index([tripId])
}

model PermissionLog {
  id         String   @id @default(cuid())
  userId     String?
  user       User?    @relation(fields: [userId], references: [id])
  deviceId   String?
  permission String
  status     String
  error      String?
  createdAt  DateTime @default(now())

  @@map("permission_logs")
  @@index([userId])
  @@index([deviceId])
}
